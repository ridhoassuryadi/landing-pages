---
import BaseLayout from "@/layouts/BaseLayout.astro";
import EntriesOne from "@/components/blog/EntriesOne.astro";

import { getCollection } from "astro:content";
export async function getStaticPaths() {
  const allPosts = await getCollection("posts");
  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.data.tags).flat()),
  ];
  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.data.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}
const { tag } = Astro.params;
const { posts } = Astro.props;
---

<BaseLayout pageTitle={tag}>
  <section>
    <div class="grid sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-3 gap-2 py-2">
      <div class="flex flex-col gap-12 h-full justify-between ">
        <div>
          <h1
            class="text-lg text-neutral-600 font-mono tracking-tight text-balance uppercase">
            Blog posts tagged with {tag}
          </h1>
        </div>
        <form class="mt-12">
          <div class="flex flex-col gap-2">
            <label
              for="email-address"
              class="sr-only"
              >Email address</label
            >
            <input
              id="email-address"
              name="email"
              type="email"
              autocomplete="email"
              required
              class="min-w-0 flex-auto rounded-xl font-mono border-0 h-14 text-sm uppercase duration-300 px-3.5 py-2 text-neutral-500 ring-1 ring-inset ring-white placeholder:text-neutral-400 focus:ring-2 focus:ring-inset focus:ring-orange-600"
              placeholder="Enter your email"
            />
            <button
              type="submit"
              class="relative group overflow-hidden pl-4 font-mono h-14 flex space-x-6 items-center bg-orange-500 hover:bg-black duration-300 rounded-xl w-full justify-between">
              <span class="relative uppercase text-xs text-white"
                >Subscribe</span
              >
              <div
                aria-hidden="true"
                class="w-12 text-white transition duration-300 -translate-y-7 group-hover:translate-y-7">
                <div class="h-14 flex">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke-width="1.5"
                    stroke="currentColor"
                    class="size-6 m-auto fill-white">
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      d="M17.25 8.25 21 12m0 0-3.75 3.75M21 12H3"
                    ></path>
                  </svg>
                </div>
                <div class="h-14 flex">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke-width="1.5"
                    stroke="currentColor"
                    class="size-6 m-auto fill-white">
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      d="M17.25 8.25 21 12m0 0-3.75 3.75M21 12H3"
                    ></path>
                  </svg>
                </div>
              </div>
            </button>
          </div>
        </form>
      </div>

      {
        posts.map((post) => (
          <EntriesOne
            url={"/blog/posts/" + post.slug}
            title={post.data.title}
            description={post.data.description}
            alt={post.data.title}
            pubDate={post.data.pubDate.toString().slice(0, 10)}
            author={post.data.author}
            image={post.data.image.url}
          />
        ))
      }
    </div>
  </section>
</BaseLayout>
